DATA: project
/Users/robnea/dev/rneatherway-fsharpbinding/FSharp.AutoComplete/test/integration/Test1Json/FileTwo.fs
/Users/robnea/dev/rneatherway-fsharpbinding/FSharp.AutoComplete/test/integration/Test1Json/Program.fs
<<EOF>>
INFO: Background parsing started
<<EOF>>
INFO: Background parsing started
<<EOF>>
INFO: Background parsing started
<<EOF>>
{"Kind":"completion","Data":{"Completions":["funky"],"HelpText":{"funky":"val funky : x:int -> int"}}}
{"Kind":"helptext","Data":{"HelpText":{"funky":"val funky : x:int -> int"}}}
{"Kind":"completion","Data":{"Completions":["Equals","GetHashCode","GetType","Terrific","ToString"],"HelpText":{"Equals":"System.Object.Equals(obj: obj) : bool"}}}
{"Kind":"helptext","Data":{"HelpText":{"Equals":"System.Object.Equals(obj: obj) : bool","GetHashCode":"System.Object.GetHashCode() : int","GetType":"System.Object.GetType() : System.Type","Terrific":"member FileTwo.NewObjectType.Terrific : y:int -> int","ToString":"System.Object.ToString() : string"}}}
{"Kind":"completion","Data":{"Completions":["Bar","Foo","NewObjectType","Qux","add","addition"],"HelpText":{"Bar":"union case FileTwo.Foo.Bar: FileTwo.Foo"}}}
{"Kind":"helptext","Data":{"HelpText":{"Bar":"union case FileTwo.Foo.Bar: FileTwo.Foo","Foo":"type Foo =\n  | Bar\n  | Qux","NewObjectType":"Multiple items\ntype NewObjectType =\n  new : unit -> NewObjectType\n  member Terrific : y:int -> int\n\n--------------------\n\nnew : unit -> FileTwo.NewObjectType","Qux":"union case FileTwo.Foo.Qux: FileTwo.Foo","add":"val add : x:int -> y:int -> int","addition":"val addition : x:int -> y:int -> int"}}}
{"Kind":"completion","Data":{"Completions":["func"],"HelpText":{"func":"val func : x:int -> int"}}}
{"Kind":"helptext","Data":{"HelpText":{"func":"val func : x:int -> int"}}}
{"Kind":"completion","Data":{"Completions":["Bar","Foo","NewObjectType","Qux","add","addition"],"HelpText":{"Bar":"union case FileTwo.Foo.Bar: FileTwo.Foo"}}}
{"Kind":"helptext","Data":{"HelpText":{"Bar":"union case FileTwo.Foo.Bar: FileTwo.Foo","Foo":"type Foo =\n  | Bar\n  | Qux","NewObjectType":"Multiple items\ntype NewObjectType =\n  new : unit -> NewObjectType\n  member Terrific : y:int -> int\n\n--------------------\n\nnew : unit -> FileTwo.NewObjectType","Qux":"union case FileTwo.Foo.Qux: FileTwo.Foo","add":"val add : x:int -> y:int -> int","addition":"val addition : x:int -> y:int -> int"}}}
DATA: tooltip
val add : x:int -> y:int -> int

Full name: FileTwo.add
<<EOF>>
DATA: tooltip
val func : x:int -> int

Full name: Program.X.func
<<EOF>>
DATA: tooltip
val testval : FileTwo.NewObjectType

Full name: Program.testval
<<EOF>>
DATA: tooltip
val funky : x:int -> int

Full name: Script.XA.funky
<<EOF>>
DATA: declarations
[1:0-19:0] Program
  - [13:4-15:5] main
[1:0-2:20] X
  - [2:6-2:20] func
<<EOF>>
DATA: declarations
[1:0-14:5] FileTwo
  - [9:4-9:19] add
  - [7:4-7:24] addition
[3:5-5:7] Foo
  - [4:4-4:7] Bar
  - [5:4-5:7] Qux
[11:5-14:5] NewObjectType
  - [13:11-14:5] Terrific
<<EOF>>
DATA: declarations
[3:0-10:0] Script
[3:0-4:21] XA
  - [4:6-4:21] funky
<<EOF>>
DATA: errors
<<EOF>>
